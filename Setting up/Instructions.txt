Installing Go
First, you need to install Go on your system. You can download the latest version of Go from the official website, https://golang.org/. Follow the installation instructions for your operating system.

Setting up your environment
After installing Go, you need to set up your environment to start writing Go code. Set your GOPATH environment variable to a directory where you want to store your Go code. For example, if you're using Linux or macOS, you can add the following line to your .bashrc or .zshrc file:

export GOPATH=$HOME/go

You should also add the Go binary directory to your PATH environment variable:

export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

Writing your first Go program
Create a file named "hello.go" in your workspace directory (in this example, it's $GOPATH/src/hello):

go
Copy code
package main

import "fmt"

func main() {
    fmt.Println("Hello, World!")
}
Compiling and running your program
To compile your program, run the following command:

go build

This will create an executable file named "hello" in your current directory. To run your program, simply execute this file:

./hello

Understanding the code
Let's take a closer look at the code we just wrote. The first line, package main, declares that this file is part of the "main" package. In Go, a package is a collection of related functions, types, and variables.

The next line, import "fmt", imports the "fmt" package, which provides functions for formatting and printing strings.

The func main() function is the entry point of our program. It's the first function that gets executed when we run our program. In our case, it simply prints the string "Hello, World!" to the console using the fmt.Println() function.

Conclusion
That's it! You've written your first Go program. This is just the beginning, of course. Go has a lot more to offer, including concurrency, networking, and web programming. I hope this tutorial has been helpful. Good luck with your Go programming!
